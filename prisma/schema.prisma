generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Timer {
    id                String @id @default(cuid())
    pomodoro_count    Int    @default(0)
    short_break_count Int    @default(0)
    long_break_count  Int    @default(0)

    pomodoro_time    Int @default(1500000) // 25 minutes
    short_break_time Int @default(300000) // 5 minutes
    long_break_time  Int @default(900000) // 15 minutes

    long_break_interval  Int     @default(4)
    auto_start_pomodoros Boolean
    auto_start_breaks    Boolean

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
    user_id String @unique
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    Timer         Timer?
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
